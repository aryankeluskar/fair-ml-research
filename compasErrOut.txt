############# Data summary #############
x_train has shape: torch.Size([14329, 43])
y_train has shape: torch.Size([14329, 1])
x_test has shape: torch.Size([6140, 43])
y_test has shape: torch.Size([6140, 1])
#######################################
############# Model #############
LR(
  (lr): Linear(in_features=43, out_features=1, bias=True)
)
############# Optim #############
SGD (
Parameter Group 0
    dampening: 0
    differentiable: False
    foreach: None
    lr: 1
    maximize: False
    momentum: 0
    nesterov: False
    weight_decay: 0
)
############# Criterion #############
BCELoss()
############# x_train #############
tensor([[ 0.2384,  0.7397,  1.5411,  ..., -0.8227, -0.6573, -2.9061],
        [ 0.2384, -1.0466, -0.5543,  ...,  1.2155, -0.6573,  0.3441],
        [ 0.2384,  1.6328,  1.5411,  ..., -0.8227, -0.6573,  0.3441],
        ...,
        [ 0.2384,  1.6328,  1.5411,  ..., -0.8227, -0.6573,  0.3441],
        [ 0.2384, -0.1535,  1.5411,  ..., -0.8227, -0.6573,  0.3441],
        [ 0.2384, -1.0466,  1.5411,  ..., -0.8227, -0.6573,  0.3441]])
############# y_train #############
tensor([[0.],
        [1.],
        [2.],
        ...,
        [2.],
        [0.],
        [0.]])
model:  LR(
  (lr): Linear(in_features=43, out_features=1, bias=True)
)
x shape: tensor([[ 0.2384,  0.7397,  1.5411,  ..., -0.8227, -0.6573, -2.9061],
        [ 0.2384, -1.0466, -0.5543,  ...,  1.2155, -0.6573,  0.3441],
        [ 0.2384,  1.6328,  1.5411,  ..., -0.8227, -0.6573,  0.3441],
        ...,
        [ 0.2384,  1.6328,  1.5411,  ..., -0.8227, -0.6573,  0.3441],
        [ 0.2384, -0.1535,  1.5411,  ..., -0.8227, -0.6573,  0.3441],
        [ 0.2384, -1.0466,  1.5411,  ..., -0.8227, -0.6573,  0.3441]])
y shape: tensor([[0.],
        [1.],
        [2.],
        ...,
        [2.],
        [0.],
        [0.]])
out shape: tensor([[0.3517],
        [0.6210],
        [0.4573],
        ...,
        [0.4824],
        [0.4597],
        [0.6838]], grad_fn=<SigmoidBackward0>)



the following output is for adult dataset, which works

############# Data summary #############
x_train has shape: torch.Size([10512, 96])
y_train has shape: torch.Size([10512, 1])
x_test has shape: torch.Size([4504, 96])
y_test has shape: torch.Size([4504, 1])
#######################################
############# Model #############
LR(
  (lr): Linear(in_features=96, out_features=1, bias=True)
)
############# Optim #############
SGD (
Parameter Group 0
    dampening: 0
    differentiable: False
    foreach: None
    lr: 1
    maximize: False
    momentum: 0
    nesterov: False
    weight_decay: 0
)
############# Criterion #############
BCELoss()
############# x_train #############
tensor([[ 0.4567, -0.0154,  0.9219,  ..., -3.3156, -0.0392, -0.0245],
        [ 1.5006, -0.6443, -0.2411,  ...,  0.3016, -0.0392, -0.0245],
        [ 0.8582, -0.2440, -0.6288,  ...,  0.3016, -0.0392, -0.0245],
        ...,
        [ 0.2961, -0.6797,  0.9219,  ...,  0.3016, -0.0392, -0.0245],
        [-0.8280, -0.7735,  0.1466,  ...,  0.3016, -0.0392, -0.0245],
        [ 0.6173, -0.3922,  1.3096,  ...,  0.3016, -0.0392, -0.0245]])
############# y_train #############
tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [0.],
        [0.]])
model:  LR(
  (lr): Linear(in_features=96, out_features=1, bias=True)
)
x shape: tensor([[ 0.4567, -0.0154,  0.9219,  ..., -3.3156, -0.0392, -0.0245],
        [ 1.5006, -0.6443, -0.2411,  ...,  0.3016, -0.0392, -0.0245],
        [ 0.8582, -0.2440, -0.6288,  ...,  0.3016, -0.0392, -0.0245],
        ...,
        [ 0.2961, -0.6797,  0.9219,  ...,  0.3016, -0.0392, -0.0245],
        [-0.8280, -0.7735,  0.1466,  ...,  0.3016, -0.0392, -0.0245],
        [ 0.6173, -0.3922,  1.3096,  ...,  0.3016, -0.0392, -0.0245]])
y shape: tensor([[1.],
        [1.],
        [1.],
        ...,
        [1.],
        [0.],
        [0.]])
out shape: tensor([[0.7068],
        [0.4887],
        [0.3921],
        ...,
        [0.6002],
        [0.4847],
        [0.6036]], grad_fn=<SigmoidBackward0>)